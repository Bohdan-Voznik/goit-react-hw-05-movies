{"version":3,"file":"static/js/579.3ad81c04.chunk.js","mappings":"4QAEaA,EAAUC,EAAAA,EAAAA,QAAH,+FAMPC,EAAOD,EAAAA,EAAAA,GAAH,oH,GAQGA,EAAAA,EAAAA,GAAH,+R,SCdJE,EAAOF,EAAAA,EAAAA,GAAH,mSAeJG,EAAMH,EAAAA,EAAAA,IAAH,sEAKHI,EAAOJ,EAAAA,EAAAA,GAAH,8IASJK,EAASL,EAAAA,EAAAA,IAAH,0CAINM,EAAYN,EAAAA,EAAAA,EAAH,oEAITO,EAAOP,EAAAA,EAAAA,EAAH,sC,SCnCJQ,EAAW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAC1C,OACE,UAAC,EAAD,YACE,SAACR,EAAD,CAAKS,IAAKD,EAAKE,IAAI,GAAGC,MAAM,QAAQC,OAAO,MAC3C,SAACX,EAAD,UAAOK,KACP,UAACJ,EAAD,YACE,SAACC,EAAD,0BACA,UAACC,EAAD,eAAQG,EAAR,c,oBCCO,SAASM,EAAT,GAA0B,IAAVC,EAAS,EAATA,MACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GAASO,KAAKH,KACvB,CAACJ,KAGF,SAACnB,EAAD,WACE,SAAC2B,EAAA,EAAD,UACqB,IAAlBL,EAAOM,QACN,SAAC1B,EAAD,UACGoB,EAAOO,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIpB,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAClC,OACE,SAACH,EAAD,CAEEC,KAAMA,EACNC,UAAWA,EACXC,IAAKA,GAHAkB,SASb,SAACC,EAAA,EAAD,CACEC,KAAI,qEAAgEd,EAAhE,sBAQhBD,EAAKgB,SAAW,CACdf,MAAOgB,IAAAA,OAAAA,a,iCCtCT,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIvC,KAAO,sBACLuC,GAGR,SAASE,IACP,OAAOT,EAFTA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAenB,UAAYmB,EAEpBA,I,qBC9CPb,EAAOC,QAAUL,EAAQ,IAARA,I,8BCNnBI,EAAOC,QAFoB","sources":["components/MoviesPage/Cast/Cast.styled.jsx","components/MoviesPage/Cast/CastItem/CastItem.styled.jsx","components/MoviesPage/Cast/CastItem/CastItem.jsx","components/MoviesPage/Cast/Cast.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding-top: 50px;\n  padding-bottom: 50px;\n  background: #f7f7f7;\n`;\n\nexport const List = styled.ul`\n  margin: -15px;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n\n  padding: 20px 40px 20px 40px;\n\n  background: #ffffff;\n  box-shadow: 0px 4px 15px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 210px) / 3);\n  margin: 15px;\n  padding: 20px;\n\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.33;\n\n  box-shadow: 0px 4px 15px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 20px;\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  margin-bottom: 12px;\n`;\n\nexport const Name = styled.h3`\n  margin: 0 0 10px 0;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.33;\n\n  text-transform: uppercase;\n`;\n\nexport const Wraper = styled.div`\n  display: flex;\n`;\n\nexport const Characror = styled.p`\n  margin: 0 10px 0px 0;\n  color: #8c8c8c;\n`;\nexport const Text = styled.p`\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Item, Img, Name, Wraper, Characror, Text } from './CastItem.styled';\n\nexport const CastItem = ({ name, character, img }) => {\n  return (\n    <Item>\n      <Img src={img} alt=\"\" width=\"234px\" height=\"\" />\n      <Name>{name}</Name>\n      <Wraper>\n        <Characror>Characror:</Characror>\n        <Text> {character} </Text>\n      </Wraper>\n    </Item>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Section, List } from './Cast.styled';\n\nimport { Container } from 'components/Container/Container';\nimport { CastItem } from './CastItem/CastItem';\nimport { Default } from 'components/MoviesPage/Default/Default';\n\nimport { fetchCast } from 'js/fechAPI';\n\nexport default function Cast({ title }) {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId).then(setActors);\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Container>\n        {actors.length !== 0 ? (\n          <List>\n            {actors.map(({ id, name, character, img }) => {\n              return (\n                <CastItem\n                  key={id}\n                  name={name}\n                  character={character}\n                  img={img}\n                />\n              );\n            })}\n          </List>\n        ) : (\n          <Default\n            text={`Unfortunately, no information about the cast of the movie \"${title}\" was found.`}\n          />\n        )}\n      </Container>\n    </Section>\n  );\n}\n\nCast.ptopType = {\n  title: PropTypes.string.isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Section","styled","List","Item","Img","Name","Wraper","Characror","Text","CastItem","name","character","img","src","alt","width","height","Cast","title","movieId","useParams","useState","actors","setActors","useEffect","fetchCast","then","Container","length","map","id","Default","text","ptopType","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}